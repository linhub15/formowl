/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardProfileImport } from './routes/dashboard/profile'
import { Route as DashboardGetStartedImport } from './routes/dashboard/get-started'
import { Route as AuthOnboardImport } from './routes/_auth/onboard'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as DashboardFormsCreateImport } from './routes/dashboard/forms/create'
import { Route as DashboardFormsFormIdImport } from './routes/dashboard/forms/$formId'

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardGetStartedRoute = DashboardGetStartedImport.update({
  id: '/get-started',
  path: '/get-started',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const AuthOnboardRoute = AuthOnboardImport.update({
  id: '/_auth/onboard',
  path: '/onboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardFormsCreateRoute = DashboardFormsCreateImport.update({
  id: '/forms/create',
  path: '/forms/create',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardFormsFormIdRoute = DashboardFormsFormIdImport.update({
  id: '/forms/$formId',
  path: '/forms/$formId',
  getParentRoute: () => DashboardRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/onboard': {
      id: '/_auth/onboard'
      path: '/onboard'
      fullPath: '/onboard'
      preLoaderRoute: typeof AuthOnboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/get-started': {
      id: '/dashboard/get-started'
      path: '/get-started'
      fullPath: '/dashboard/get-started'
      preLoaderRoute: typeof DashboardGetStartedImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/forms/$formId': {
      id: '/dashboard/forms/$formId'
      path: '/forms/$formId'
      fullPath: '/dashboard/forms/$formId'
      preLoaderRoute: typeof DashboardFormsFormIdImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/forms/create': {
      id: '/dashboard/forms/create'
      path: '/forms/create'
      fullPath: '/dashboard/forms/create'
      preLoaderRoute: typeof DashboardFormsCreateImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardGetStartedRoute: typeof DashboardGetStartedRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardFormsFormIdRoute: typeof DashboardFormsFormIdRoute
  DashboardFormsCreateRoute: typeof DashboardFormsCreateRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardGetStartedRoute: DashboardGetStartedRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardFormsFormIdRoute: DashboardFormsFormIdRoute,
  DashboardFormsCreateRoute: DashboardFormsCreateRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/onboard': typeof AuthOnboardRoute
  '/dashboard/get-started': typeof DashboardGetStartedRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard/forms/$formId': typeof DashboardFormsFormIdRoute
  '/dashboard/forms/create': typeof DashboardFormsCreateRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/onboard': typeof AuthOnboardRoute
  '/dashboard/get-started': typeof DashboardGetStartedRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard/forms/$formId': typeof DashboardFormsFormIdRoute
  '/dashboard/forms/create': typeof DashboardFormsCreateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/onboard': typeof AuthOnboardRoute
  '/dashboard/get-started': typeof DashboardGetStartedRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard/forms/$formId': typeof DashboardFormsFormIdRoute
  '/dashboard/forms/create': typeof DashboardFormsCreateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/onboard'
    | '/dashboard/get-started'
    | '/dashboard/profile'
    | '/dashboard/forms/$formId'
    | '/dashboard/forms/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/onboard'
    | '/dashboard/get-started'
    | '/dashboard/profile'
    | '/dashboard/forms/$formId'
    | '/dashboard/forms/create'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/_auth/login'
    | '/_auth/onboard'
    | '/dashboard/get-started'
    | '/dashboard/profile'
    | '/dashboard/forms/$formId'
    | '/dashboard/forms/create'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthOnboardRoute: typeof AuthOnboardRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthOnboardRoute: AuthOnboardRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/_auth/login",
        "/_auth/onboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/get-started",
        "/dashboard/profile",
        "/dashboard/forms/$formId",
        "/dashboard/forms/create"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/onboard": {
      "filePath": "_auth/onboard.tsx"
    },
    "/dashboard/get-started": {
      "filePath": "dashboard/get-started.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/profile": {
      "filePath": "dashboard/profile.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/forms/$formId": {
      "filePath": "dashboard/forms/$formId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/forms/create": {
      "filePath": "dashboard/forms/create.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
